---
- name: Making Directory for Alfresco 4.2
  file: 
    path: /opt/ansible/archive
    state: directory
    mode: 0755
  
#- name: Download alfresco community4.2.f
#  get_url:
#    url: https://download.alfresco.com/release/community/4.2.f-build-00012/alfresco-community-4.2.f.zip
#    dest: /opt/ansible/archive/alfresco-community-4.2.f.zip
#    validate_certs: no
#  register: alfresco_downloaded
- name: Changing the OWNERSHIP for Ansible Directory
  file: dest=/opt/ansible owner=ansible group=ansible mode=u=rwX,g=rX,o=rX recurse=yes
  register: ownership_changed

- name: Go to OPT Directory
  shell: cd /opt/ansible/archive
  register: moved_path
  when: ownership_changed is success

- name: Download Alfresco
  shell: 'wget https://download.alfresco.com/release/community/4.2.f-build-00012/alfresco-community-4.2.f.zip  -P /opt/ansible/archive '
  when: moved_path is success
  register: alfresco_downloaded

- name: Extract /opt/ansible/archive/alfresco-community-4.2.f.zip to /home/ansible/downloads/alfresco-community-4.2.f
#  command: unzip -o /home/ansible/downlaods/alfresco-community-4.2.f.zip -d /home/ansible/downloads/alfresco-community-4.2.f
  unarchive:
    src: /home/ansible/alfresco-community-4.2.f.zip
    dest: /opt/ansible/archive/alfresco-community-4.2.f
    remote_src: yes
  register: alfresco_extracted
  when: alfresco_downloaded is changed

- name: Install alfresco to tomcat
  shell: cp -r /opt/ansible/archive/alfresco-community-4.2.f/web-server/* /opt/ansible/
  when: alfresco_extracted is changed

- name: Install alfresco bin, licenses and readme
  shell: cp -r /opt/ansible/archive/alfresco-community-4.2.f/bin /opt/ansible/archive/alfresco-community-4.2.f/licenses /opt/ansible/archive/alfresco-community-4.2.f/README.txt  /opt/ansible/
  when: alfresco_extracted is changed

#- name: Install alfresco amps for alfresco share (5.2)
#  shell: cp -rf /tmp/alfresco{{alfresco_archive_folder}}/amps {{ alfresco_user_home }}/
#  when: setup_shared_alfresco

#- name: Cleanup alfresco unzipped
#  file: path=/tmp/alfresco state=absent
#  when: alfresco_extracted is changed

- name: Create alfresco alf_data directory
  file: path=/opt/ansible/alf_data state=directory owner=ansible group=ansible
  when: alfresco_extracted is changed

#- name: Create alfresco amp directory if not exists
#  file: path={{ alfresco_user_home }}/amps state=directory owner={{ alfresco_user }} group={{ alfresco_group }}
#  when: alfresco_extracted is changed

#- name: Create alfresco amp_share directory
#  file: path={{ alfresco_user_home }}/amps_share state=directory owner={{ alfresco_user }} group={{ alfresco_group }}
#  when: alfresco_extracted is changed

- name: Create alfresco log directory
  file: path=/opt/ansible/ state=directory owner=ansible  group=ansible
  when: alfresco_extracted is changed

- name: Install libreoffice startup script
  copy: src=start_oo.sh dest=/opt/ansible/bin/start_oo.sh owner=ansible group=ansible  mode=0755
  when: alfresco_extracted is changed

- name: Install alfresco startup script
  template: src=alfresco.sh.j2 dest=/opt/ansible/bin/alfresco.sh owner=ansible group=ansible  mode=0755 backup=yes
  when: alfresco_extracted is changed

- name: Install alfresco init script
  template: src=alfresco.j2 dest=/etc/init.d/alfresco owner=ansible group=ansible  mode=0755
  when: alfresco_extracted is changed

- name: Install alfresco global configuration
  template: src=alfresco-global.properties.j2 dest={{ alfresco_user_home }}/tomcat/shared/classes/alfresco-global.properties owner=ansible  group=ansible mode=0644 backup=yes
  when: alfresco_extracted is changed

- name: Install alfresco logging configuration
  template: src=custom-log4j.properties.j2 dest={{ alfresco_user_home }}/tomcat/shared/classes/alfresco/extension/custom-log4j.properties owner={{ alfresco_user }} group={{ alfresco_group }} mode=0644
  when: alfresco_extracted is changed

- name: Set alfresco file owner
  shell: chown -R {{ alfresco_user }}:{{ alfresco_group }} {{ alfresco_user_home }} && chown -R {{ alfresco_user }}:{{ alfresco_group }} {{ alfresco_user_home }}/tomcat/
  when: alfresco_extracted is changed
  
#- include: azure-blob-storage.yml
#  when: setup_azure_blob_storage

- name: Start alfresco server
  shell: /sbin/service alfresco start
  when: alfresco_extracted is changed
  
- name: Wait for alfresco war deploy
  wait_for: path=/opt/ansible/tomcat/webapps/alfresco/WEB-INF/web.xml
  when: alfresco_extracted is changed

- name: Remove old conf alfresco.xml and share.xml catalina for Tomcat8
  file:
    state: absent
    path: "{{ alfresco_user_home }}/tomcat/conf/Catalina/localhost/"
  when:
    - '{{ tomcat_version[0:1]|int}} > 7'
    - 'alfresco_extracted is changed'
  
- name: wait for alfresco log
  wait_for:
    path: '{{ alfresco_user_home }}/tomcat/logs/catalina.out'
    state: present

- name: wait for alfresco startup
  shell: 'grep "Server startup in" {{ alfresco_user_home }}/tomcat/logs/catalina.out'
  register: cmd_result
  retries: 1000
  delay: 5
  until: cmd_result is success

- name: clean previous logs
  file:
    state: absent
    path: '{{ alfresco_user_home }}/tomcat/logs/catalina.out'
  
- name: stop alfresco server
  shell: /sbin/service alfresco stop

- name: Apply amps Shared Alfresco
  shell: '/bin/sh {{ alfresco_user_home }}/bin/apply_amps.sh -force'
  when: setup_shared_alfresco
  
- name: start alfresco server
  shell: /sbin/service alfresco start

- name: wait for alfresco log
  wait_for:
    path: '{{ alfresco_user_home }}/tomcat/logs/catalina.out'
    state: present

- name: wait for alfresco startup
  shell: 'grep "Server startup in" {{ alfresco_user_home }}/tomcat/logs/catalina.out'
  register: cmd_result
  retries: 1000
  delay: 5
  until: cmd_result is success
